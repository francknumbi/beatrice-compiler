/* This file was generated by SableCC (http://www.sablecc.org/). */

package beatrice.node;

import beatrice.analysis.*;

@SuppressWarnings("nls")
public final class AAdditionExpress extends PExpress
{
    private PExpress _express_;
    private TPlus _plus_;
    private PFacteur _facteur_;

    public AAdditionExpress()
    {
        // Constructor
    }

    public AAdditionExpress(
        @SuppressWarnings("hiding") PExpress _express_,
        @SuppressWarnings("hiding") TPlus _plus_,
        @SuppressWarnings("hiding") PFacteur _facteur_)
    {
        // Constructor
        setExpress(_express_);

        setPlus(_plus_);

        setFacteur(_facteur_);

    }

    @Override
    public Object clone()
    {
        return new AAdditionExpress(
            cloneNode(this._express_),
            cloneNode(this._plus_),
            cloneNode(this._facteur_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAdditionExpress(this);
    }

    public PExpress getExpress()
    {
        return this._express_;
    }

    public void setExpress(PExpress node)
    {
        if(this._express_ != null)
        {
            this._express_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._express_ = node;
    }

    public TPlus getPlus()
    {
        return this._plus_;
    }

    public void setPlus(TPlus node)
    {
        if(this._plus_ != null)
        {
            this._plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plus_ = node;
    }

    public PFacteur getFacteur()
    {
        return this._facteur_;
    }

    public void setFacteur(PFacteur node)
    {
        if(this._facteur_ != null)
        {
            this._facteur_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._facteur_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._express_)
            + toString(this._plus_)
            + toString(this._facteur_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._express_ == child)
        {
            this._express_ = null;
            return;
        }

        if(this._plus_ == child)
        {
            this._plus_ = null;
            return;
        }

        if(this._facteur_ == child)
        {
            this._facteur_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._express_ == oldChild)
        {
            setExpress((PExpress) newChild);
            return;
        }

        if(this._plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(this._facteur_ == oldChild)
        {
            setFacteur((PFacteur) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
