/* This file was generated by SableCC (http://www.sablecc.org/). */

package beatrice.node;

import beatrice.analysis.*;

@SuppressWarnings("nls")
public final class AParentheseConditionSimple extends PConditionSimple
{
    private TParentheseO _parentheseO_;
    private PConditionSimple _conditionSimple_;
    private TParentheseF _parentheseF_;

    public AParentheseConditionSimple()
    {
        // Constructor
    }

    public AParentheseConditionSimple(
        @SuppressWarnings("hiding") TParentheseO _parentheseO_,
        @SuppressWarnings("hiding") PConditionSimple _conditionSimple_,
        @SuppressWarnings("hiding") TParentheseF _parentheseF_)
    {
        // Constructor
        setParentheseO(_parentheseO_);

        setConditionSimple(_conditionSimple_);

        setParentheseF(_parentheseF_);

    }

    @Override
    public Object clone()
    {
        return new AParentheseConditionSimple(
            cloneNode(this._parentheseO_),
            cloneNode(this._conditionSimple_),
            cloneNode(this._parentheseF_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParentheseConditionSimple(this);
    }

    public TParentheseO getParentheseO()
    {
        return this._parentheseO_;
    }

    public void setParentheseO(TParentheseO node)
    {
        if(this._parentheseO_ != null)
        {
            this._parentheseO_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseO_ = node;
    }

    public PConditionSimple getConditionSimple()
    {
        return this._conditionSimple_;
    }

    public void setConditionSimple(PConditionSimple node)
    {
        if(this._conditionSimple_ != null)
        {
            this._conditionSimple_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._conditionSimple_ = node;
    }

    public TParentheseF getParentheseF()
    {
        return this._parentheseF_;
    }

    public void setParentheseF(TParentheseF node)
    {
        if(this._parentheseF_ != null)
        {
            this._parentheseF_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseF_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._parentheseO_)
            + toString(this._conditionSimple_)
            + toString(this._parentheseF_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._parentheseO_ == child)
        {
            this._parentheseO_ = null;
            return;
        }

        if(this._conditionSimple_ == child)
        {
            this._conditionSimple_ = null;
            return;
        }

        if(this._parentheseF_ == child)
        {
            this._parentheseF_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._parentheseO_ == oldChild)
        {
            setParentheseO((TParentheseO) newChild);
            return;
        }

        if(this._conditionSimple_ == oldChild)
        {
            setConditionSimple((PConditionSimple) newChild);
            return;
        }

        if(this._parentheseF_ == oldChild)
        {
            setParentheseF((TParentheseF) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
